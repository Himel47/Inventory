@using productsDetails.ViewModels

@{
    ViewData["Title"] = "AddNewStock";
    var count = 1;
}
@model StockViewModel

<h1>AddNewStock</h1>

<h4>Stock</h4>
<hr />
<div class="row">
    <div class="col-md-8">
        <form asp-action="AddNewStock">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="d-flex justify-content-between">
                <div class="form-group col-6">
                    <label asp-for="stock.supplierId" class="control-label"></label>
                    <input asp-for="stock.supplierId" class="form-control" min="0" />
                    <span asp-validation-for="stock.supplierId" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="stock.stockReceiveDate" class="control-label"></label>
                    <input asp-for="stock.stockReceiveDate" class="form-control" type="date"/>
                    <span asp-validation-for="stock.stockReceiveDate" class="text-danger"></span>
                </div>
            </div>
            <div class="form-group col-5">
                <label asp-for="stock.stockStatus" class="control-label"></label>
                <input asp-for="stock.stockStatus" class="form-control"/>
                <span asp-validation-for="stock.stockStatus" class="text-danger"></span>
            </div>
            <div id="forms-list" class="mt-5">
                <h3 id="productCount"></h3>
                <div class="form-template">
                    <div class="form-group">
                        @Html.LabelFor(model => model.products[0].productName)
                        @Html.EditorFor(model => model.products[0].productName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.products[0].productName, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.products[0].productDesc)
                        @Html.TextAreaFor(model => model.products[0].productDesc, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.products[0].productDesc, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.products[0].productUnitPrice)
                        @Html.EditorFor(model => model.products[0].productUnitPrice, new { htmlAttributes = new { @class = "form-control", type = "number" } })
                        @Html.ValidationMessageFor(model => model.products[0].productUnitPrice, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.products[0].productQuantity)
                        @Html.EditorFor(model => model.products[0].productQuantity, new { htmlAttributes = new { @class = "form-control", type = "number" } })
                        @Html.ValidationMessageFor(model => model.products[0].productQuantity, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.products[0].productImage)
                        @Html.EditorFor(model => model.products[0].productImage, new { htmlAttributes = new { @class = "form-control", type = "file" } })
                        @Html.ValidationMessageFor(model => model.products[0].productImage, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary my-2" />
            </div>
            <div class="d-flex mt-5 justify-content-between">
                <div></div>
                <button id="add-form-btn">Add another product</button>
            </div>
        </form>
    </div>
    <div class=" col-md-4">

    </div>
</div>

<div>
    <a asp-action="StockList">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        $(document).ready(function () {
            var formTemplate = $('.form-template').clone();
            var formCount = 1;
            var productHeading = document.querySelector('#productCount');
            productHeading.textContent("Product " + formCount);

            $('#add-form-btn').click(function () {
                var newForm = formTemplate.clone();
                newForm.find('input, select, textarea').each(function () {
                    $(this).attr('name', $(this).attr('name').replace('0', formCount));
                });
                $('#forms-list').append(newForm);
                formCount++;
            });

        });
    </script>
}
