@using productsDetails.ViewModels


@{
    ViewData["Title"] = "AddProductsToStock";
}

@model StockViewModel

<h2>Add Products To this Stock</h2>
<hr />
<h3>Stock Details:</h3>
<dl class="row">
    <dd>
        @Html.HiddenFor(model=>model.stock.skuId)
    </dd>
    <dt class="col-sm-2">
        @Html.DisplayNameFor(model => model.stock.StockStatus)
    </dt>
    <dd class="col-sm-10">
        @Html.DisplayFor(model => model.stock.StockStatus)
    </dd>
    <dt class="col-sm-2">
        @Html.DisplayNameFor(model => model.stock.StockReceiveDate)
    </dt>
    <dd class="col-sm-10">
        @Html.DisplayFor(model => model.stock.StockReceiveDate)
    </dd>
    <dt class="col-sm-2">
        @Html.DisplayNameFor(model => model.stock.SupplierId)
    </dt>
    <dd class="col-sm-10">
        @Html.DisplayFor(model => model.stock.SupplierId)
    </dd>
</dl>
<div class="mt-5">
    <h3>
        Products Form
    </h3>
</div>
<form asp-action="AddProductsToStock" method="post" enctype="multipart/form-data">
    @Html.HiddenFor(model => model.stock.skuId)
    @Html.HiddenFor(model => model.stock.StockReceiveDate)
    @Html.HiddenFor(model => model.stock.ProductNumber)
    @Html.HiddenFor(model => model.stock.StockStatus)
    @Html.HiddenFor(model => model.stock.StockTotalCost)
    @Html.HiddenFor(model => model.stock.SupplierId)
    
    @for (int it = 0; it < Model.stock.ProductNumber; it++)
    {
        <div class="my-2 border border-dark rounded-3">
            <h4 class="px-3 py-1">Product @(it + 1)</h4>
            <div>
                @{
                    var product = Model.products[it];
                }
                <partial name="_ProductForm" model="product" />
            </div>
        </div>
    }
    <button type="submit" class="btn btn-primary rounded">Submit</button>
</form>




